name: PHP Unit

on:
  workflow_call:
    inputs:
      package:
        description: "Package path to test."
        required: false
        default: ""
        type: string

permissions:
  contents: read

jobs:
  settings:
    name: Settings
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: ./.github/actions/checkout.yml
        with:
          package: ${{ inputs.package }}

      - name: Install PHP
        uses: ./.github/actions/php.yml

      - name: Collect Settings
        run: |
          # PHP (we need a better way...)
          mkdir -p ".tmp/easy-ci"

          composer require --no-interaction --working-dir=".tmp/easy-ci" --update-no-dev "symplify/easy-ci:11.1.5"

          echo "php-versions=$(".tmp/easy-ci/vendor/bin/easy-ci" php-versions-json)" >> $GITHUB_OUTPUT

          # Dependencies
          DEPS_HIGHEST="highest"
          DEPS_LOCKED="$(if [ ! "${{ github.event_name }}" == "schedule" ] && [ -f "composer.lock" ]; then echo "locked"; fi)"
          DEPS_LOWEST="$(if [ ! "${{ github.event_name }}" == "schedule" ]; then echo "lowest"; fi)"

          echo "dependencies=$(echo "[\"$DEPS_HIGHEST\", \"$DEPS_LOCKED\", \"$DEPS_LOWEST\"]" | jq "[.[] | select(length > 0)]" -r -c)" >> $GITHUB_OUTPUT

          # Laravel
          echo "laravel-versions=$(jq '.require."laravel/framework" | split("|") | sort' -c composer.json)" >> $GITHUB_OUTPUT
  run:
    # Only 28 characters are visible on UI :(
    name: >-
      P${{ matrix.php }}
      L${{ matrix.laravel }}
      ${{ matrix.dependencies == 'locked' && 'ðŸ”’' || (matrix.dependencies == 'highest' && 'ðŸ¡¹' || 'ðŸ¡»') }}
      ${{ startsWith(matrix.os, 'windows') && 'ðŸ††' || (startsWith(matrix.os, 'macos') && 'ðŸ…¼' || 'ðŸ†„') }}

    # `continue-on-error: true` will add a red mark in commit/pr, this is
    # definitely not what I want :( So we exclude some items instead.
    #
    # https://github.com/actions/toolkit/issues/399
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(steps.settings.output.php-versions) }}
        laravel: ${{ fromJson(steps.settings.output.laravel-versions) }}
        dependencies: ${{ fromJson(steps.settings.output.dependencies) }}
        os:
          - ubuntu-latest
          - windows-latest
        exclude:
          - dependencies: 'lowest'
            php: ${{ fromJson(steps.settings.output.php-versions)[1] }}
          - dependencies: 'lowest'
            php: ${{ fromJson(steps.settings.output.php-versions)[2] }}
          - dependencies: 'lowest'
            php: ${{ fromJson(steps.settings.output.php-versions)[3] }}
          - dependencies: 'lowest'
            php: ${{ fromJson(steps.settings.output.php-versions)[4] }}
          - dependencies: 'lowest'
            php: ${{ fromJson(steps.settings.output.php-versions)[5] }}

    runs-on: ${{ matrix.os }}
    needs:
      - settings

    steps:
      # Checkout
      - name: Checkout
        uses: ./.github/actions/checkout.yml
        with:
          package: ${{ inputs.package }}

      # Install PHP
      - name: Install PHP
        uses: ./.github/actions/php.yml
        with:
          version: ${{ matrix.php }}
          dependencies: false

      # On Windows, the caret ^ is the escape character, so the version string
      # that contains ^ will be handled incorrectly
      - name: Install Laravel
        shell: bash
        run: |
          composer remove --no-interaction --no-progress --ansi --no-update laravel/framework
          composer require --no-interaction --no-progress --ansi --no-update "laravel/framework:${{ matrix.laravel }}"
          composer remove --no-interaction --no-progress --ansi --no-update --dev nunomaduro/larastan

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}

      - name: Execute
        run: |
          ./vendor/bin/phpunit

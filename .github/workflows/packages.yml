name: Sync Packages

on:
  push:
    branches:
      - 'master'
  workflow_call:
  workflow_dispatch:

env:
  PACKAGES_DIRECTORY: "packages/"

permissions:
  contents: read

jobs:
  list:
    name: list
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.list.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: list
        name: Detect packages
        working-directory: ${{ env.PACKAGES_DIRECTORY }}
        run: |
          echo "::set-output name=value::$(ls -1 -d */ | sed -e 's-/$--' | jq  --raw-input . | jq --slurp -c .)"

  sync:
    name: "package: ${{ matrix.package }}"
    runs-on: ubuntu-latest
    needs:
      - list
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.list.outputs.json) }}
    steps:
      # Dependencies
      - name: Install git-filter-repo
        run: sudo -H pip3 install git-filter-repo
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets[matrix.package] }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Checkout source repo
      # Unfortunately actions/checkout cannot be used with `--no-single-branch`
      - name: Checkout src
        run: |
          git clone --no-single-branch "git@github.com:${{ github.repository }}.git" src

      # Checkout package repo
      # Unfortunately actions/checkout cannot checkout empty repo
      - name: Checkout package
        run: |
          git clone "git@github.com:${{ github.repository }}-${{ matrix.package }}.git" package

      # Update package
      - name: Update package
        run: |
          git-filter-repo --force --source=src --target=package --subdirectory-filter="${{ env.PACKAGES_DIRECTORY }}${{ matrix.package }}"

      # Push
      - name: Push package
        working-directory: package
        run: |
          git push --mirror --force origin

# Source:
# * https://github.com/micromatch/picomatch (bf6a33bd3db990edfbfd20b3b160eed926cd07dd)
# * picomatch/test/dots-invalid.js

# describe('stars', () => {
## describe('issue related', () => {
### it('should match paths with no slashes (micromatch/#15)', () => {
  [true, "a.js", "**/*.js"]
  [true, "a.js", "**/a*"]
  [true, "a.js", "**/a*.js"]
  [true, "abc", "**/abc"]

### it('should regard non-exclusive double-stars as single stars', () => {
  [["a/a/a/", "a/a/b/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**a/a/*/"]
  [false, "aaa/bba/ccc", "aaa/**ccc"]
  [false, "aaa/bba/ccc", "aaa/**z"]
  [true, "aaa/bba/ccc", "aaa/**b**/ccc"]
  [false, "a/b/c", "**c"]
  [false, "a/b/c", "a/**c"]
  [false, "a/b/c", "a/**z"]
  [false, "a/b/c/b/c", "a/**b**/c"]
  [false, "a/b/c/d/e.js", "a/b/c**/*.js"]
  [true, "a/b/c/b/c", "a/**/b/**/c"]
  [true, "a/aba/c", "a/**b**/c"]
  [true, "a/b/c", "a/**b**/c"]
  [true, "a/b/c/d.js", "a/b/c**/*.js"]

### it('should support globstars followed by braces', () => {
  // (1) [true, "a/b/c/d/e/z/foo.md", "a/**/c/**{,(/z|/x)}/*.md"]
  // (1) [true, "a/b/c/d/e/z/foo.md", "a/**{,(/x|/z)}/*.md"]

### it('should support globstars followed by braces with nested extglobs', () => {
  // (1) [true, "/x/foo.md", "@(/x|/z)/*.md"]
  // (1) [true, "/z/foo.md", "@(/x|/z)/*.md"]
  // (1) [true, "a/b/c/d/e/z/foo.md", "a/**/c/**@(/z|/x)/*.md"]
  // (1) [true, "a/b/c/d/e/z/foo.md", "a/**@(/x|/z)/*.md"]

### it('should support multiple globstars in one pattern', () => {
  [false, "a/b/c/d/e/z/foo.md", "a/**/j/**/z/*.md"]
  [false, "a/b/c/j/e/z/foo.txt", "a/**/j/**/z/*.md"]
  [true, "a/b/c/d/e/j/n/p/o/z/foo.md", "a/**/j/**/z/*.md"]
  [true, "a/b/c/d/e/z/foo.md", "a/**/z/*.md"]
  [true, "a/b/c/j/e/z/foo.md", "a/**/j/**/z/*.md"]

### it('should match file extensions:', () => {
  [["a.md", "a/b/c.md"], [".md", "a.md", "a/b/c.md", ".txt"], "**/*.md"]
  [[".md", "a/.md", "a/b/.md"], [".md/.md", ".md", "a/.md", "a/b/.md"], "**/.md"]
  [[".md/.md", ".md/foo/.md"], [".md/.md", ".md/foo/.md", ".md", "a/.md", "a/b/.md"], ".md/**/.md"]

### it('should respect trailing slashes on paterns', () => {
  [["a/a/", "a/a/a/", "a/a/a/a/", "a/a/a/a/a/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/*/a/"]
  [["a/a/a/", "a/a/a/a/", "a/a/a/a/a/", "a/a/b/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/*/a/*/"]
  [["a/x/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/*/x/"]
  [["a/a/a/a/", "a/a/a/a/a/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/*/*/*/*/"]
  [["a/a/a/a/a/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/*/*/*/*/*/"]
  [["a/a/a/", "a/a/b/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "*a/a/*/"]
  [["a/a/a/", "a/a/b/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**a/a/*/"]
  [["a/a/a/", "a/a/a/a/", "a/a/a/a/a/", "a/a/b/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/a/*/*/"]
  [["a/a/a/a/", "a/a/a/a/a/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/a/*/*/*/"]
  [["a/a/a/a/a/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/a/*/*/*/*/"]
  [["a/a/a/", "a/a/a/a/", "a/a/a/a/a/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/a/*/a/"]
  [["a/a/b/"], ["a", "a/", "a/a", "a/a/", "a/a/a", "a/a/a/", "a/a/a/a", "a/a/a/a/", "a/a/a/a/a", "a/a/a/a/a/", "a/a/b", "a/a/b/", "a/b", "a/b/", "a/b/c/.d/e/", "a/c", "a/c/", "a/b", "a/x/", "b", "b/", "x/y", "x/y/", "z/z", "z/z/"], "**/a/*/b/"]

### it('should match literal globstars when stars are escaped', () => {
  [["**a.md", "**.md"], [".md", "**a.md", "**.md", ".md", "**"], "\\*\\**.md"]
  [["**.md"], [".md", "**a.md", "**.md", ".md", "**"], "\\*\\*.md"]

### it('single dots', () => {
  [false, ".a/a", "**"]
  [false, "a/.a", "**"]
  [false, ".a/a", "**/"]
  [false, "a/.a", "**/"]
  [false, ".a/a", "**/**"]
  [false, "a/.a", "**/**"]
  [false, ".a/a", "**/**/*"]
  [false, "a/.a", "**/**/*"]
  [false, ".a/a", "**/**/x"]
  [false, "a/.a", "**/**/x"]
  [false, ".a/a", "**/x"]
  [false, "a/.a", "**/x"]
  [false, ".a/a", "**/x/*"]
  [false, "a/.a", "**/x/*"]
  [false, ".a/a", "**/x/**"]
  [false, "a/.a", "**/x/**"]
  [false, ".a/a", "**/x/*/*"]
  [false, "a/.a", "**/x/*/*"]
  [false, ".a/a", "*/x/**"]
  [false, "a/.a", "*/x/**"]
  [false, ".a/a", "a/**"]
  [false, "a/.a", "a/**"]
  [false, ".a/a", "a/**/*"]
  [false, "a/.a", "a/**/*"]
  [false, ".a/a", "a/**/**/*"]
  [false, "a/.a", "a/**/**/*"]
  [false, ".a/a", "b/**"]
  [false, "a/.a", "b/**"]

### it('double dots', () => {
  [false, "a/../a", "**"]
  [false, "ab/../ac", "**"]
  [false, "../a", "**"]
  [false, "../../b", "**"]
  [false, "../c", "**"]
  [false, "../c/d", "**"]
  [false, "a/../a", "**/"]
  [false, "ab/../ac", "**/"]
  [false, "../a", "**/"]
  [false, "../../b", "**/"]
  [false, "../c", "**/"]
  [false, "../c/d", "**/"]
  [false, "a/../a", "**/**"]
  [false, "ab/../ac", "**/**"]
  [false, "../a", "**/**"]
  [false, "../../b", "**/**"]
  [false, "../c", "**/**"]
  [false, "../c/d", "**/**"]
  [false, "a/../a", "**/**/*"]
  [false, "ab/../ac", "**/**/*"]
  [false, "../a", "**/**/*"]
  [false, "../../b", "**/**/*"]
  [false, "../c", "**/**/*"]
  [false, "../c/d", "**/**/*"]
  [false, "a/../a", "**/**/x"]
  [false, "ab/../ac", "**/**/x"]
  [false, "../a", "**/**/x"]
  [false, "../../b", "**/**/x"]
  [false, "../c", "**/**/x"]
  [false, "../c/d", "**/**/x"]
  [false, "a/../a", "**/x"]
  [false, "ab/../ac", "**/x"]
  [false, "../a", "**/x"]
  [false, "../../b", "**/x"]
  [false, "../c", "**/x"]
  [false, "../c/d", "**/x"]
  [false, "a/../a", "**/x/*"]
  [false, "ab/../ac", "**/x/*"]
  [false, "../a", "**/x/*"]
  [false, "../../b", "**/x/*"]
  [false, "../c", "**/x/*"]
  [false, "../c/d", "**/x/*"]
  [false, "a/../a", "**/x/**"]
  [false, "ab/../ac", "**/x/**"]
  [false, "../a", "**/x/**"]
  [false, "../../b", "**/x/**"]
  [false, "../c", "**/x/**"]
  [false, "../c/d", "**/x/**"]
  [false, "a/../a", "**/x/*/*"]
  [false, "ab/../ac", "**/x/*/*"]
  [false, "../a", "**/x/*/*"]
  [false, "../../b", "**/x/*/*"]
  [false, "../c", "**/x/*/*"]
  [false, "../c/d", "**/x/*/*"]
  [false, "a/../a", "*/x/**"]
  [false, "ab/../ac", "*/x/**"]
  [false, "../a", "*/x/**"]
  [false, "../../b", "*/x/**"]
  [false, "../c", "*/x/**"]
  [false, "../c/d", "*/x/**"]
  [false, "a/../a", "a/**"]
  [false, "ab/../ac", "a/**"]
  [false, "../a", "a/**"]
  [false, "../../b", "a/**"]
  [false, "../c", "a/**"]
  [false, "../c/d", "a/**"]
  [false, "a/../a", "a/**/*"]
  [false, "ab/../ac", "a/**/*"]
  [false, "../a", "a/**/*"]
  [false, "../../b", "a/**/*"]
  [false, "../c", "a/**/*"]
  [false, "../c/d", "a/**/*"]
  [false, "a/../a", "a/**/**/*"]
  [false, "ab/../ac", "a/**/**/*"]
  [false, "../a", "a/**/**/*"]
  [false, "../../b", "a/**/**/*"]
  [false, "../c", "a/**/**/*"]
  [false, "../c/d", "a/**/**/*"]
  [false, "a/../a", "b/**"]
  [false, "ab/../ac", "b/**"]
  [false, "../a", "b/**"]
  [false, "../../b", "b/**"]
  [false, "../c", "b/**"]
  [false, "../c/d", "b/**"]

### it('should match', () => {
  [false, "a", "**/"]
  [false, "a", "**/a/*"]
  [false, "a", "**/a/*/*"]
  [false, "a", "*/a/**"]
  [false, "a", "a/**/*"]
  [false, "a", "a/**/**/*"]
  [false, "a/b", "**/"]
  [false, "a/b", "**/b/*"]
  [false, "a/b", "**/b/*/*"]
  [false, "a/b", "b/**"]
  [false, "a/b/c", "**/"]
  [false, "a/b/c", "**/**/b"]
  [false, "a/b/c", "**/b"]
  [false, "a/b/c", "**/b/*/*"]
  [false, "a/b/c", "b/**"]
  [false, "a/b/c/d", "**/"]
  [false, "a/b/c/d", "**/d/*"]
  [false, "a/b/c/d", "b/**"]
  [true, "a", "**"]
  [true, "a", "**/**"]
  [true, "a", "**/**/*"]
  [true, "a", "**/**/a"]
  [true, "a", "**/a"]
  // (4.2) [true, "a", "**/a/**"]
  // (4.2) [true, "a", "a/**"]
  [true, "a/b", "**"]
  [true, "a/b", "**/**"]
  [true, "a/b", "**/**/*"]
  [true, "a/b", "**/**/b"]
  [true, "a/b", "**/b"]
  // (4.2) [true, "a/b", "**/b/**"]
  // (4.2) [true, "a/b", "*/b/**"]
  [true, "a/b", "a/**"]
  [true, "a/b", "a/**/*"]
  [true, "a/b", "a/**/**/*"]
  [true, "a/b/c", "**"]
  [true, "a/b/c", "**/**"]
  [true, "a/b/c", "**/**/*"]
  [true, "a/b/c", "**/b/*"]
  [true, "a/b/c", "**/b/**"]
  [true, "a/b/c", "*/b/**"]
  [true, "a/b/c", "a/**"]
  [true, "a/b/c", "a/**/*"]
  [true, "a/b/c", "a/**/**/*"]
  [true, "a/b/c/d", "**"]
  [true, "a/b/c/d", "**/**"]
  [true, "a/b/c/d", "**/**/*"]
  [true, "a/b/c/d", "**/**/d"]
  [true, "a/b/c/d", "**/b/**"]
  [true, "a/b/c/d", "**/b/*/*"]
  [true, "a/b/c/d", "**/d"]
  [true, "a/b/c/d", "*/b/**"]
  [true, "a/b/c/d", "a/**"]
  [true, "a/b/c/d", "a/**/*"]
  [true, "a/b/c/d", "a/**/**/*"]

### it('should match nested directories', () => {
  [true, "a/b", "*/*"]
  [true, "a/b/c/xyz.md", "a/b/c/*.md"]
  [true, "a/bb.bb/c/xyz.md", "a/*/c/*.md"]
  [true, "a/bb/c/xyz.md", "a/*/c/*.md"]
  [true, "a/bbbb/c/xyz.md", "a/*/c/*.md"]

  [true, "a/b/c", "**/*"]
  [true, "a/b/c", "**/**"]
  [true, "a/b/c", "*/**"]
  [true, "a/b/c/d/e/j/n/p/o/z/c.md", "a/**/j/**/z/*.md"]
  [true, "a/b/c/d/e/z/c.md", "a/**/z/*.md"]
  [true, "a/bb.bb/aa/b.b/aa/c/xyz.md", "a/**/c/*.md"]
  [true, "a/bb.bb/aa/bb/aa/c/xyz.md", "a/**/c/*.md"]
  [false, "a/b/c/j/e/z/c.txt", "a/**/j/**/z/*.md"]
  // (1) [false, "a/b/c/xyz.md", "a/b/**/c{d,e}/**/xyz.md"]
  // (1) [false, "a/b/d/xyz.md", "a/b/**/c{d,e}/**/xyz.md"]
  [false, "a/b", "a/**/"]
  [false, "a/b/.js/c.txt", "**/*"]
  [false, "a/b/c/d", "a/**/"]
  [false, "a/bb", "a/**/"]
  [false, "a/cb", "a/**/"]
  [true, "/a/b", "/**"]
  [true, "a.b", "**/*"]
  [true, "a.js", "**/*"]
  [true, "a.js", "**/*.js"]
  // (4.2) [true, "a/", "a/**/"]
  [true, "a/a.js", "**/*.js"]
  [true, "a/a/b.js", "**/*.js"]
  [true, "a/b", "a/**/b"]
  [true, "a/b", "a/**b"]
  [true, "a/b.md", "**/*.md"]
  [true, "a/b/c.js", "**/*"]
  [true, "a/b/c.txt", "**/*"]
  [true, "a/b/c/d/", "a/**/"]
  [true, "a/b/c/d/a.js", "**/*"]
  [true, "a/b/c/z.js", "a/b/**/*.js"]
  [true, "a/b/z.js", "a/b/**/*.js"]
  [true, "ab", "**/*"]
  [true, "ab/c", "**/*"]
  [true, "ab/c/d", "**/*"]
  [true, "abc.js", "**/*"]

### it('should not match dotfiles by default', () => {
  [false, "a/.b", "a/**/z/*.md"]
  [false, "a/b/z/.a", "a/**/z/*.a"]
  [false, "a/b/z/.a", "a/*/z/*.a"]
  [false, "a/b/z/.a", "b/a"]
  [false, "a/foo/z/.b", "a/**/z/*.md"]

### it('should match leading dots when defined in pattern', () => {
  [false, ".gitignore", "a/**/z/*.md"]
  [false, "a/b/z/.dotfile", "a/**/z/*.md"]
  [false, "a/b/z/.dotfile.md", "**/c/.*.md"]
  [true, "a/.b", "a/.*"]
  [true, "a/b/z/.a", "a/*/z/.a"]
  [true, "a/b/z/.dotfile.md", "**/.*.md"]
  [true, "a/b/z/.dotfile.md", "a/**/z/.*.md"]
  [["a.md", "a/b/c.md"], [".md", "a.md", "a/b/c.md", ".txt"], "**/*.md"]
  [[".md", "a/.md", "a/b/.md"], [".md/.md", ".md", "a/.md", "a/b/.md"], "**/.md"]
  [[".md/.md", ".md/foo/.md"], [".md/.md", ".md/foo/.md", ".md", "a/.md", "a/b/.md"], ".md/**/.md"]
  [["a/b/z/.dotfile.md"], [".gitignore", "a/b/z/.dotfile", "a/b/z/.dotfile.md"], "a/**/z/.*.md"]

### it('todo... (micromatch/#24)', () => {
  [true, "foo/bar/baz/one/image.png", "foo/bar/**/one/**/*.*"]
  [true, "foo/bar/baz/one/two/image.png", "foo/bar/**/one/**/*.*"]
  [true, "foo/bar/baz/one/two/three/image.png", "foo/bar/**/one/**/*.*"]
  [false, "a/b/c/d/", "a/b/**/f"]
  // (4.2) [true, "a", "a/**"]
  [true, "a", "**"]
  // (1) [true, "a", "a{,/**}"]
  [true, "a/", "**"]
  [true, "a/", "a/**"]
  [true, "a/b/c/d", "**"]
  [true, "a/b/c/d/", "**"]
  [true, "a/b/c/d/", "**/**"]
  [true, "a/b/c/d/", "**/b/**"]
  [true, "a/b/c/d/", "a/b/**"]
  [true, "a/b/c/d/", "a/b/**/"]
  [true, "a/b/c/d/", "a/b/**/c/**/"]
  [true, "a/b/c/d/", "a/b/**/c/**/d/"]
  [true, "a/b/c/d/e.f", "a/b/**/**/*.*"]
  [true, "a/b/c/d/e.f", "a/b/**/*.*"]
  [true, "a/b/c/d/e.f", "a/b/**/c/**/d/*.*"]
  [true, "a/b/c/d/e.f", "a/b/**/d/**/*.*"]
  [true, "a/b/c/d/g/e.f", "a/b/**/d/**/*.*"]
  [true, "a/b/c/d/g/g/e.f", "a/b/**/d/**/*.*"]

  [true, "a/b-c/z.js", "a/b-*/**/z.js"]
  [true, "a/b-c/d/e/z.js", "a/b-*/**/z.js"]

## describe('globstars', () => {
### it('should match globstars', () => {
  [true, "a/b/c/d.js", "**/*.js"]
  [true, "a/b/c.js", "**/*.js"]
  [true, "a/b.js", "**/*.js"]
  [true, "a/b/c/d/e/f.js", "a/b/**/*.js"]
  [true, "a/b/c/d/e.js", "a/b/**/*.js"]
  [true, "a/b/c/d.js", "a/b/c/**/*.js"]
  [true, "a/b/c/d.js", "a/b/**/*.js"]
  [true, "a/b/d.js", "a/b/**/*.js"]

  [false, "a/d.js", "a/b/**/*.js"]
  [false, "d.js", "a/b/**/*.js"]

### it('should regard non-exclusive double-stars as single stars', () => {
  [false, "a/b/c", "**c"]
  [false, "a/b/c", "a/**c"]
  [false, "a/b/c", "a/**z"]
  [false, "a/b/c/b/c", "a/**b**/c"]
  [false, "a/b/c/d/e.js", "a/b/c**/*.js"]
  [true, "a/b/c/b/c", "a/**/b/**/c"]
  [true, "a/aba/c", "a/**b**/c"]
  [true, "a/b/c", "a/**b**/c"]
  [true, "a/b/c/d.js", "a/b/c**/*.js"]

### it('should support globstars (**)', () => {
  [false, "a", "a/**/*"]
  [false, "a", "a/**/**/*"]
  [false, "a", "a/**/**/**/*"]
  [false, "a/", "**/a"]
  [false, "a/", "a/**/*"]
  [false, "a/", "a/**/**/*"]
  [false, "a/", "a/**/**/**/*"]
  [false, "a/b", "**/a"]
  [false, "a/b/c/j/e/z/c.txt", "a/**/j/**/z/*.md"]
  [false, "a/bb", "a/**/b"]
  [false, "a/c", "**/a"]
  [false, "a/b", "**/a"]
  [false, "a/x/y", "**/a"]
  [false, "a/b/c/d", "**/a"]
  [true, "a", "**"]
  [true, "a", "**/a"]
  // (4.2) [true, "a", "a/**"]
  [true, "a/", "**"]
  [true, "a/", "**/a/**"]
  [true, "a/", "a/**"]
  [true, "a/", "a/**/**"]
  [true, "a/a", "**/a"]
  [true, "a/b", "**"]
  [true, "a/b", "*/*"]
  [true, "a/b", "a/**"]
  [true, "a/b", "a/**/*"]
  [true, "a/b", "a/**/**/*"]
  [true, "a/b", "a/**/**/**/*"]
  [true, "a/b", "a/**/b"]
  [true, "a/b/c", "**"]
  [true, "a/b/c", "**/*"]
  [true, "a/b/c", "**/**"]
  [true, "a/b/c", "*/**"]
  [true, "a/b/c", "a/**"]
  [true, "a/b/c", "a/**/*"]
  [true, "a/b/c", "a/**/**/*"]
  [true, "a/b/c", "a/**/**/**/*"]
  [true, "a/b/c/d", "**"]
  [true, "a/b/c/d", "a/**"]
  [true, "a/b/c/d", "a/**/*"]
  [true, "a/b/c/d", "a/**/**/*"]
  [true, "a/b/c/d", "a/**/**/**/*"]
  [true, "a/b/c/d.e", "a/b/**/c/**/*.*"]
  [true, "a/b/c/d/e/f/g.md", "a/**/f/*.md"]
  [true, "a/b/c/d/e/f/g/h/i/j/k/l.md", "a/**/f/**/k/*.md"]
  [true, "a/b/c/def.md", "a/b/c/*.md"]
  [true, "a/bb.bb/c/ddd.md", "a/*/c/*.md"]
  [true, "a/bb.bb/cc/d.d/ee/f/ggg.md", "a/**/f/*.md"]
  [true, "a/bb.bb/cc/dd/ee/f/ggg.md", "a/**/f/*.md"]
  [true, "a/bb/c/ddd.md", "a/*/c/*.md"]
  [true, "a/bbbb/c/ddd.md", "a/*/c/*.md"]

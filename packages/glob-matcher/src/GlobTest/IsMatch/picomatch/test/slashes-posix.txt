# Source:
# * https://github.com/micromatch/picomatch (bf6a33bd3db990edfbfd20b3b160eed926cd07dd)
# * picomatch/test/posix-classes.js

# describe('slash handling - posix', () => {
## it('should match a literal string', () => {
  [false, "a/a", "(a/b)"]
  // (2) [true, "a/b", "(a/b)"]
  [false, "a/c", "(a/b)"]
  [false, "b/a", "(a/b)"]
  [false, "b/b", "(a/b)"]
  [false, "b/c", "(a/b)"]

  [false, "a/a", "a/b"]
  [true, "a/b", "a/b"]
  [false, "a/c", "a/b"]
  [false, "b/a", "a/b"]
  [false, "b/b", "a/b"]
  [false, "b/c", "a/b"]

## it('should match an array of literal strings', () => {
  [false, "a/a", "a/b"]
  [true, "a/b", "a/b"]
  [false, "a/c", "a/b"]
  [false, "b/a", "a/b"]
  [false, "b/b", "a/b"]
  [true, "b/b", "b/b"]
  [false, "b/c", "a/b"]

## it('should support regex logical or', () => {
  // (2) [true, "a/a", "a/(a|c)"]
  [false, "a/b", "a/(a|c)"]
  // (2) [true, "a/c", "a/(a|c)"]

  // (2) [true, "a/a", "a/(a|b|c)"]
  // (2) [true, "a/b", "a/(a|b|c)"]
  // (2) [true, "a/c", "a/(a|b|c)"]

## it('should support regex ranges', () => {
  [false, "a/a", "a/[b-c]"]
  [true, "a/b", "a/[b-c]"]
  [true, "a/c", "a/[b-c]"]

  [true, "a/a", "a/[a-z]"]
  [true, "a/b", "a/[a-z]"]
  [true, "a/c", "a/[a-z]"]
  [false, "a/x/y", "a/[a-z]"]
  [true, "a/x", "a/[a-z]"]

## it('should support single globs (*)', () => {
  [true, "a", "*"]
  [true, "b", "*"]
  [false, "a/a", "*"]
  [false, "a/b", "*"]
  [false, "a/c", "*"]
  [false, "a/x", "*"]
  [false, "a/a/a", "*"]
  [false, "a/a/b", "*"]
  [false, "a/a/a/a", "*"]
  [false, "a/a/a/a/a", "*"]
  [false, "x/y", "*"]
  [false, "z/z", "*"]

  [false, "a", "*/*"]
  [false, "b", "*/*"]
  [true, "a/a", "*/*"]
  [true, "a/b", "*/*"]
  [true, "a/c", "*/*"]
  [true, "a/x", "*/*"]
  [false, "a/a/a", "*/*"]
  [false, "a/a/b", "*/*"]
  [false, "a/a/a/a", "*/*"]
  [false, "a/a/a/a/a", "*/*"]
  [true, "x/y", "*/*"]
  [true, "z/z", "*/*"]

  [false, "a", "*/*/*"]
  [false, "b", "*/*/*"]
  [false, "a/a", "*/*/*"]
  [false, "a/b", "*/*/*"]
  [false, "a/c", "*/*/*"]
  [false, "a/x", "*/*/*"]
  [true, "a/a/a", "*/*/*"]
  [true, "a/a/b", "*/*/*"]
  [false, "a/a/a/a", "*/*/*"]
  [false, "a/a/a/a/a", "*/*/*"]
  [false, "x/y", "*/*/*"]
  [false, "z/z", "*/*/*"]

  [false, "a", "*/*/*/*"]
  [false, "b", "*/*/*/*"]
  [false, "a/a", "*/*/*/*"]
  [false, "a/b", "*/*/*/*"]
  [false, "a/c", "*/*/*/*"]
  [false, "a/x", "*/*/*/*"]
  [false, "a/a/a", "*/*/*/*"]
  [false, "a/a/b", "*/*/*/*"]
  [true, "a/a/a/a", "*/*/*/*"]
  [false, "a/a/a/a/a", "*/*/*/*"]
  [false, "x/y", "*/*/*/*"]
  [false, "z/z", "*/*/*/*"]

  [false, "a", "*/*/*/*/*"]
  [false, "b", "*/*/*/*/*"]
  [false, "a/a", "*/*/*/*/*"]
  [false, "a/b", "*/*/*/*/*"]
  [false, "a/c", "*/*/*/*/*"]
  [false, "a/x", "*/*/*/*/*"]
  [false, "a/a/a", "*/*/*/*/*"]
  [false, "a/a/b", "*/*/*/*/*"]
  [false, "a/a/a/a", "*/*/*/*/*"]
  [true, "a/a/a/a/a", "*/*/*/*/*"]
  [false, "x/y", "*/*/*/*/*"]
  [false, "z/z", "*/*/*/*/*"]

  [false, "a", "a/*"]
  [false, "b", "a/*"]
  [true, "a/a", "a/*"]
  [true, "a/b", "a/*"]
  [true, "a/c", "a/*"]
  [true, "a/x", "a/*"]
  [false, "a/a/a", "a/*"]
  [false, "a/a/b", "a/*"]
  [false, "a/a/a/a", "a/*"]
  [false, "a/a/a/a/a", "a/*"]
  [false, "x/y", "a/*"]
  [false, "z/z", "a/*"]

  [false, "a", "a/*/*"]
  [false, "b", "a/*/*"]
  [false, "a/a", "a/*/*"]
  [false, "a/b", "a/*/*"]
  [false, "a/c", "a/*/*"]
  [false, "a/x", "a/*/*"]
  [true, "a/a/a", "a/*/*"]
  [true, "a/a/b", "a/*/*"]
  [false, "a/a/a/a", "a/*/*"]
  [false, "a/a/a/a/a", "a/*/*"]
  [false, "x/y", "a/*/*"]
  [false, "z/z", "a/*/*"]

  [false, "a", "a/*/*/*"]
  [false, "b", "a/*/*/*"]
  [false, "a/a", "a/*/*/*"]
  [false, "a/b", "a/*/*/*"]
  [false, "a/c", "a/*/*/*"]
  [false, "a/x", "a/*/*/*"]
  [false, "a/a/a", "a/*/*/*"]
  [false, "a/a/b", "a/*/*/*"]
  [true, "a/a/a/a", "a/*/*/*"]
  [false, "a/a/a/a/a", "a/*/*/*"]
  [false, "x/y", "a/*/*/*"]
  [false, "z/z", "a/*/*/*"]

  [false, "a", "a/*/*/*/*"]
  [false, "b", "a/*/*/*/*"]
  [false, "a/a", "a/*/*/*/*"]
  [false, "a/b", "a/*/*/*/*"]
  [false, "a/c", "a/*/*/*/*"]
  [false, "a/x", "a/*/*/*/*"]
  [false, "a/a/a", "a/*/*/*/*"]
  [false, "a/a/b", "a/*/*/*/*"]
  [false, "a/a/a/a", "a/*/*/*/*"]
  [true, "a/a/a/a/a", "a/*/*/*/*"]
  [false, "x/y", "a/*/*/*/*"]
  [false, "z/z", "a/*/*/*/*"]

  [false, "a", "a/*/a"]
  [false, "b", "a/*/a"]
  [false, "a/a", "a/*/a"]
  [false, "a/b", "a/*/a"]
  [false, "a/c", "a/*/a"]
  [false, "a/x", "a/*/a"]
  [true, "a/a/a", "a/*/a"]
  [false, "a/a/b", "a/*/a"]
  [false, "a/a/a/a", "a/*/a"]
  [false, "a/a/a/a/a", "a/*/a"]
  [false, "x/y", "a/*/a"]
  [false, "z/z", "a/*/a"]

  [false, "a", "a/*/b"]
  [false, "b", "a/*/b"]
  [false, "a/a", "a/*/b"]
  [false, "a/b", "a/*/b"]
  [false, "a/c", "a/*/b"]
  [false, "a/x", "a/*/b"]
  [false, "a/a/a", "a/*/b"]
  [true, "a/a/b", "a/*/b"]
  [false, "a/a/a/a", "a/*/b"]
  [false, "a/a/a/a/a", "a/*/b"]
  [false, "x/y", "a/*/b"]
  [false, "z/z", "a/*/b"]

## it('should support globstars (**)', () => {
  [true, "a", "a"]
  [false, "a/", "a"]
  [false, "a/a", "a"]
  [false, "a/b", "a"]
  [false, "a/c", "a"]
  [false, "a/x", "a"]
  [false, "a/x/y", "a"]
  [false, "a/x/y/z", "a"]

  [true, "a", "*"]
  // (3) [true, "a/", "*", { relaxSlashes: true }]
  // (1) [true, "a/", "*{,/}"]
  [false, "a/a", "*"]
  [false, "a/b", "*"]
  [false, "a/c", "*"]
  [false, "a/x", "*"]
  [false, "a/x/y", "*"]
  [false, "a/x/y/z", "*"]

  [false, "a", "*/"]
  [true, "a/", "*/"]
  [false, "a/a", "*/"]
  [false, "a/b", "*/"]
  [false, "a/c", "*/"]
  [false, "a/x", "*/"]
  [false, "a/x/y", "*/"]
  [false, "a/x/y/z", "*/"]

  [false, "a", "*/*"]
  [false, "a/", "*/*"]
  [true, "a/a", "*/*"]
  [true, "a/b", "*/*"]
  [true, "a/c", "*/*"]
  [true, "a/x", "*/*"]
  [false, "a/x/y", "*/*"]
  [false, "a/x/y/z", "*/*"]

  [true, "a", "**"]
  [true, "a/", "**"]
  [true, "a/a", "**"]
  [true, "a/b", "**"]
  [true, "a/c", "**"]
  [true, "a/x", "**"]
  [true, "a/x/y", "**"]
  [true, "a/x/y/z", "**"]

  [false, "a/", "**/a"]
  [false, "a/b", "**/a"]
  [false, "a/c", "**/a"]
  [false, "a/x", "**/a"]
  [false, "a/x/y/z", "**/a"]
  [true, "a/x/y/z/a", "**/a"]
  [true, "a", "**/a"]
  [true, "a/a", "**/a"]

  [false, "a", "a/*"]
  [false, "a/", "a/*"]
  [true, "a/a", "a/*"]
  [true, "a/b", "a/*"]
  [true, "a/c", "a/*"]
  [true, "a/x", "a/*"]
  [false, "a/x/y", "a/*"]
  [false, "a/x/y/z", "a/*"]

  // (4.2) [true, "a", "a/**"]
  [true, "a/", "a/**"]
  [true, "a/a", "a/**"]
  [true, "a/b", "a/**"]
  [true, "a/c", "a/**"]
  [true, "a/x", "a/**"]
  [true, "a/x/y", "a/**"]
  [true, "a/x/y/z", "a/**"]

  [false, "a", "a/**/*"]
  [false, "a/", "a/**/*"]
  [true, "a/a", "a/**/*"]
  [true, "a/b", "a/**/*"]
  [true, "a/c", "a/**/*"]
  [true, "a/x", "a/**/*"]
  [true, "a/x/y", "a/**/*"]
  [true, "a/x/y/z", "a/**/*"]

  [false, "a", "a/**/**/*"]
  [false, "a/", "a/**/**/*"]
  [true, "a/a", "a/**/**/*"]
  [true, "a/b", "a/**/**/*"]
  [true, "a/c", "a/**/**/*"]
  [true, "a/x", "a/**/**/*"]
  [true, "a/x/y", "a/**/**/*"]
  [true, "a/x/y/z", "a/**/**/*"]

  [true, "a/b/foo/bar/baz.qux", "a/b/**/bar/**/*.*"]
  [true, "a/b/bar/baz.qux", "a/b/**/bar/**/*.*"]

## it('should support negation patterns', () => {
  // (1) [true, "a/a", "!a/b"]
  // (1) [false, "a/b", "!a/b"]
  // (1) [true, "a/c", "!a/b"]
  // (1) [true, "b/a", "!a/b"]
  // (1) [true, "b/b", "!a/b"]
  // (1) [true, "b/c", "!a/b"]

  // (1) [true, "a/a", ["*/*", "!a/b", "!*/c"]]
  // (1) [true, "a/b", ["*/*", "!a/b", "!*/c"]]
  // (1) [true, "a/c", ["*/*", "!a/b", "!*/c"]]
  // (1) [true, "b/a", ["*/*", "!a/b", "!*/c"]]
  // (1) [true, "b/b", ["*/*", "!a/b", "!*/c"]]
  // (1) [true, "b/c", ["*/*", "!a/b", "!*/c"]]

  // (1) [true, "a/a", ["!a/b", "!*/c"]]
  // (1) [true, "a/b", ["!a/b", "!*/c"]]
  // (1) [true, "a/c", ["!a/b", "!*/c"]]
  // (1) [true, "b/a", ["!a/b", "!*/c"]]
  // (1) [true, "b/b", ["!a/b", "!*/c"]]
  // (1) [true, "b/c", ["!a/b", "!*/c"]]

  // (1) [true, "a/a", ["!a/b", "!a/c"]]
  // (1) [true, "a/b", ["!a/b", "!a/c"]]
  // (1) [true, "a/c", ["!a/b", "!a/c"]]
  // (1) [true, "b/a", ["!a/b", "!a/c"]]
  // (1) [true, "b/b", ["!a/b", "!a/c"]]
  // (1) [true, "b/c", ["!a/b", "!a/c"]]

  // (1) [true, "a/a", "!a/(b)"]
  // (1) [false, "a/b", "!a/(b)"]
  // (1) [true, "a/c", "!a/(b)"]
  // (1) [true, "b/a", "!a/(b)"]
  // (1) [true, "b/b", "!a/(b)"]
  // (1) [true, "b/c", "!a/(b)"]

  // (4.8) [true, "a/a", "!(a/b)"]
  // (4.8) [false, "a/b", "!(a/b)"]
  // (4.8) [true, "a/c", "!(a/b)"]
  // (4.8) [true, "b/a", "!(a/b)"]
  // (4.8) [true, "b/b", "!(a/b)"]
  // (4.8) [true, "b/c", "!(a/b)"]

## it('should work with file extensions', () => {
  [false, "a.txt", "a/**/*.txt"]
  [true, "a/b.txt", "a/**/*.txt"]
  [true, "a/x/y.txt", "a/**/*.txt"]
  [false, "a/x/y/z", "a/**/*.txt"]

  [false, "a.txt", "a/*.txt"]
  [true, "a/b.txt", "a/*.txt"]
  [false, "a/x/y.txt", "a/*.txt"]
  [false, "a/x/y/z", "a/*.txt"]

  [true, "a.txt", "a*.txt"]
  [false, "a/b.txt", "a*.txt"]
  [false, "a/x/y.txt", "a*.txt"]
  [false, "a/x/y/z", "a*.txt"]

  [true, "a.txt", "*.txt"]
  [false, "a/b.txt", "*.txt"]
  [false, "a/x/y.txt", "*.txt"]
  [false, "a/x/y/z", "*.txt"]

## it('should match one directory level with a single star (*)', () => {
  [false, "/a", "*/"]
  [false, "/a", "*/*/*"]
  [false, "/a", "*/*/*/*"]
  [false, "/a", "*/*/*/*/*"]
  [false, "/a", "/*/"]
  [false, "/a", "a/*"]
  [false, "/a", "a/*/*"]
  [false, "/a", "a/*/*/*"]
  [false, "/a", "a/*/*/*/*"]
  [false, "/a", "a/*/a"]
  [false, "/a", "a/*/b"]
  [false, "/a/", "*"]
  [false, "/a/", "**/*", null, { "strictSlashes": true }]
  [false, "/a/", "*/"]
  [false, "/a/", "*/*", null, { "strictSlashes": true }]
  [false, "/a/", "*/*/*"]
  [false, "/a/", "*/*/*/*"]
  [false, "/a/", "*/*/*/*/*"]
  [false, "/a/", "/*", null, { "strictSlashes": true }]
  [false, "/a/", "a/*"]
  [false, "/a/", "a/*/*"]
  [false, "/a/", "a/*/*/*"]
  [false, "/a/", "a/*/*/*/*"]
  [false, "/a/", "a/*/a"]
  [false, "/a/", "a/*/b"]
  [false, "/ab", "*"]
  [false, "/abc", "*"]
  [false, "/b", "*"]
  [false, "/b", "*/"]
  [false, "/b", "*/*/*"]
  [false, "/b", "*/*/*/*"]
  [false, "/b", "*/*/*/*/*"]
  [false, "/b", "/*/"]
  [false, "/b", "a/*"]
  [false, "/b", "a/*/*"]
  [false, "/b", "a/*/*/*"]
  [false, "/b", "a/*/*/*/*"]
  [false, "/b", "a/*/a"]
  [false, "/b", "a/*/b"]
  [false, "a", "*/"]
  [false, "a", "*/*"]
  [false, "a", "*/*/*"]
  [false, "a", "*/*/*/*"]
  [false, "a", "*/*/*/*/*"]
  [false, "a", "/*"]
  [false, "a", "/*/"]
  [false, "a", "a/*"]
  [false, "a", "a/*/*"]
  [false, "a", "a/*/*/*"]
  [false, "a", "a/*/*/*/*"]
  [false, "a", "a/*/a"]
  [false, "a", "a/*/b"]
  [false, "a/", "*", null, { "strictSlashes": true }]
  [false, "a/", "**/*", null, { "strictSlashes": true }]
  [false, "a/", "*/*", null, { "strictSlashes": true }]
  [false, "a/", "*/*/*/*", null, { "strictSlashes": true }]
  [false, "a/", "*/*/*/*/*", null, { "strictSlashes": true }]
  [false, "a/", "/*", null, { "strictSlashes": true }]
  [false, "a/", "/*/", null, { "strictSlashes": true }]
  [false, "a/", "a/*", null, { "strictSlashes": true }]
  [false, "a/", "a/*/*", null, { "strictSlashes": true }]
  [false, "a/", "a/*/*/*", null, { "strictSlashes": true }]
  [false, "a/", "a/*/*/*/*", null, { "strictSlashes": true }]
  [false, "a/", "a/*/a", null, { "strictSlashes": true }]
  [false, "a/", "a/*/b", null, { "strictSlashes": true }]
  [false, "a/a", "*"]
  [false, "a/a", "*/"]
  [false, "a/a", "*/*/*"]
  [false, "a/a", "*/*/*/*"]
  [false, "a/a", "*/*/*/*/*"]
  [false, "a/a", "/*"]
  [false, "a/a", "/*/"]
  [false, "a/a", "a/*/*"]
  [false, "a/a", "a/*/*/*"]
  [false, "a/a", "a/*/*/*/*"]
  [false, "a/a", "a/*/a"]
  [false, "a/a", "a/*/b"]
  [false, "a/a/a", "*"]
  [false, "a/a/a", "*/"]
  [false, "a/a/a", "*/*"]
  [false, "a/a/a", "*/*/*/*"]
  [false, "a/a/a", "*/*/*/*/*"]
  [false, "a/a/a", "/*"]
  [false, "a/a/a", "/*/"]
  [false, "a/a/a", "a/*"]
  [false, "a/a/a", "a/*/*/*"]
  [false, "a/a/a", "a/*/*/*/*"]
  [false, "a/a/a", "a/*/b"]
  [false, "a/a/a/a", "*"]
  [false, "a/a/a/a", "*/"]
  [false, "a/a/a/a", "*/*"]
  [false, "a/a/a/a", "*/*/*"]
  [false, "a/a/a/a", "*/*/*/*/*"]
  [false, "a/a/a/a", "/*"]
  [false, "a/a/a/a", "/*/"]
  [false, "a/a/a/a", "a/*"]
  [false, "a/a/a/a", "a/*/*"]
  [false, "a/a/a/a", "a/*/*/*/*"]
  [false, "a/a/a/a", "a/*/a"]
  [false, "a/a/a/a", "a/*/b"]
  [false, "a/a/a/a/a", "*"]
  [false, "a/a/a/a/a", "*/"]
  [false, "a/a/a/a/a", "*/*"]
  [false, "a/a/a/a/a", "*/*/*"]
  [false, "a/a/a/a/a", "*/*/*/*"]
  [false, "a/a/a/a/a", "/*"]
  [false, "a/a/a/a/a", "/*/"]
  [false, "a/a/a/a/a", "a/*"]
  [false, "a/a/a/a/a", "a/*/*"]
  [false, "a/a/a/a/a", "a/*/*/*"]
  [false, "a/a/a/a/a", "a/*/a"]
  [false, "a/a/a/a/a", "a/*/b"]
  [false, "a/a/b", "*"]
  [false, "a/a/b", "*/"]
  [false, "a/a/b", "*/*"]
  [false, "a/a/b", "*/*/*/*"]
  [false, "a/a/b", "*/*/*/*/*"]
  [false, "a/a/b", "/*"]
  [false, "a/a/b", "/*/"]
  [false, "a/a/b", "a/*"]
  [false, "a/a/b", "a/*/*/*"]
  [false, "a/a/b", "a/*/*/*/*"]
  [false, "a/a/b", "a/*/a"]
  [false, "a/b", "*"]
  [false, "a/b", "*/"]
  [false, "a/b", "*/*/*/*"]
  [false, "a/b", "*/*/*/*/*"]
  [false, "a/b", "/*"]
  [false, "a/b", "/*/"]
  [false, "a/b", "a/*/*"]
  [false, "a/b", "a/*/*/*"]
  [false, "a/b", "a/*/*/*/*"]
  [false, "a/b", "a/*/a"]
  [false, "a/b", "a/*/b"]
  [false, "a/c", "*"]
  [false, "a/c", "*/"]
  [false, "a/c", "*/*/*/*"]
  [false, "a/c", "*/*/*/*/*"]
  [false, "a/c", "/*"]
  [false, "a/c", "/*/"]
  [false, "a/c", "a/*/*"]
  [false, "a/c", "a/*/*/*"]
  [false, "a/c", "a/*/*/*/*"]
  [false, "a/c", "a/*/a"]
  [false, "a/c", "a/*/b"]
  [false, "a/x", "*"]
  [false, "a/x", "*/"]
  [false, "a/x", "*/*/*/*"]
  [false, "a/x", "*/*/*/*/*"]
  [false, "a/x", "/*"]
  [false, "a/x", "/*/"]
  [false, "a/x", "a/*/*"]
  [false, "a/x", "a/*/*/*"]
  [false, "a/x", "a/*/*/*/*"]
  [false, "a/x", "a/*/a"]
  [false, "a/x", "a/*/b"]
  [false, "b", "*/"]
  [false, "b", "*/*"]
  [false, "b", "*/*/*/*"]
  [false, "b", "*/*/*/*/*"]
  [false, "b", "/*"]
  [false, "b", "/*/"]
  [false, "b", "a/*"]
  [false, "b", "a/*/*"]
  [false, "b", "a/*/*/*"]
  [false, "b", "a/*/*/*/*"]
  [false, "b", "a/*/a"]
  [false, "b", "a/*/b"]
  [false, "x/y", "*"]
  [false, "x/y", "*/"]
  [false, "x/y", "*/*/*"]
  [false, "x/y", "*/*/*/*"]
  [false, "x/y", "*/*/*/*/*"]
  [false, "x/y", "/*"]
  [false, "x/y", "/*/"]
  [false, "x/y", "a/*"]
  [false, "x/y", "a/*/*"]
  [false, "x/y", "a/*/*/*"]
  [false, "x/y", "a/*/*/*/*"]
  [false, "x/y", "a/*/a"]
  [false, "x/y", "a/*/b"]
  [false, "z/z", "*"]
  [false, "z/z", "*/"]
  [false, "z/z", "*/*/*/*"]
  [false, "z/z", "*/*/*/*/*"]
  [false, "z/z", "/*"]
  [false, "z/z", "/*/"]
  [false, "z/z", "a/*"]
  [false, "z/z", "a/*/*"]
  [false, "z/z", "a/*/*/*"]
  [false, "z/z", "a/*/*/*/*"]
  [false, "z/z", "a/*/a"]
  [false, "z/z", "a/*/b"]
  [true, "/a", "**/*"]
  [true, "/a", "*/*"]
  [true, "/a", "/*"]
  // (1) [true, "/a/", "**/*{,/}"]
  // (4.2) [true, "/a/", "*/*"]
  // (1) [true, "/a/", "*/*{,/}"]
  // (4.2) [true, "/a/", "/*"]
  [true, "/a/", "/*/"]
  // (1) [true, "/a/", "/*{,/}"]
  [true, "/b", "**/*"]
  [true, "/b", "*/*"]
  [true, "/b", "/*"]
  [true, "a", "*"]
  [true, "a", "**/*"]
  // (1) [true, "a/", "**/*{,/}"]
  [true, "a/", "*/"]
  // (1) [true, "a/", "*{,/}"]
  [true, "a/a", "**/*"]
  [true, "a/a", "*/*"]
  [true, "a/a", "a/*"]
  [true, "a/a/a", "**/*"]
  [true, "a/a/a", "*/*/*"]
  [true, "a/a/a", "a/*/*"]
  [true, "a/a/a", "a/*/a"]
  [true, "a/a/a/a", "**/*"]
  [true, "a/a/a/a", "*/*/*/*"]
  [true, "a/a/a/a", "a/*/*/*"]
  [true, "a/a/a/a/a", "**/*"]
  [true, "a/a/a/a/a", "*/*/*/*/*"]
  [true, "a/a/a/a/a", "a/*/*/*/*"]
  [true, "a/a/b", "**/*"]
  [true, "a/a/b", "a/*/*"]
  [true, "a/a/b", "a/*/b"]
  [true, "a/b", "**/*"]
  [true, "a/b", "*/*"]
  [true, "a/b", "a/*"]
  [true, "a/c", "**/*"]
  [true, "a/c", "*/*"]
  [true, "a/c", "a/*"]
  [true, "a/x", "**/*"]
  [true, "a/x", "*/*"]
  [true, "a/x", "a/*"]
  [true, "b", "*"]
  [true, "b", "**/*"]
  [true, "x/y", "**/*"]
  [true, "x/y", "*/*"]
  [true, "z/z", "**/*"]
  [true, "z/z", "*/*"]

## it('should match one or more directories with a globstar', () => {
  [false, "a/", "**/a"]
  [false, "/a/", "**/a"]
  [false, "a/a/", "**/a"]
  [false, "/a/a/", "**/a"]
  [false, "a/a/a/", "**/a"]

  [true, "a", "**/a"]
  [true, "a/a", "**/a"]
  [true, "a/a/a", "**/a"]
  [true, "/a", "**/a"]
  // (1) [true, "a/a/", "**/a/*{,/}"]
  [false, "a/a/", "**/a/*", null, { "strictSlashes": true }]
  [true, "/a/a", "**/a"]

  // (4.2) [true, "a", "a/**"]
  [false, "/a", "a/**"]
  [false, "/a/", "a/**"]
  [false, "/a/a", "a/**"]
  [false, "/a/a/", "a/**"]
  // (4.2) [true, "/a", "/a/**"]
  [true, "/a/", "/a/**"]
  [true, "/a/a", "/a/**"]
  [true, "/a/a/", "/a/**"]
  [true, "a/", "a/**"]
  [true, "a/a", "a/**"]
  [true, "a/a/", "a/**"]
  [true, "a/a/a", "a/**"]
  [true, "a/a/a/", "a/**"]

  // (4.2) [true, "a", "**/a/**"]
  // (4.2) [true, "/a", "**/a/**"]
  [true, "/a/", "**/a/**"]
  [true, "/a/a", "**/a/**"]
  [true, "/a/a/", "**/a/**"]
  [true, "a/", "**/a/**"]
  [true, "a/a", "**/a/**"]
  [true, "a/a/", "**/a/**"]
  [true, "a/a/a", "**/a/**"]
  [true, "a/a/a/", "**/a/**"]

## it('should match one or more characters', () => {
  [true, "a", "*"]
  [true, "aa", "*"]
  [true, "aaa", "*"]
  [true, "aaaa", "*"]
  [true, "ab", "*"]
  [true, "b", "*"]
  [true, "bb", "*"]
  [true, "c", "*"]
  [true, "cc", "*"]
  [true, "cac", "*"]
  [false, "a/a", "*"]
  [false, "a/b", "*"]
  [false, "a/c", "*"]
  [false, "a/x", "*"]
  [false, "a/a/a", "*"]
  [false, "a/a/b", "*"]
  [false, "a/a/a/a", "*"]
  [false, "a/a/a/a/a", "*"]
  [false, "x/y", "*"]
  [false, "z/z", "*"]

  [true, "a", "a*"]
  [true, "aa", "a*"]
  [true, "aaa", "a*"]
  [true, "aaaa", "a*"]
  [true, "ab", "a*"]
  [false, "b", "a*"]
  [false, "bb", "a*"]
  [false, "c", "a*"]
  [false, "cc", "a*"]
  [false, "cac", "a*"]
  [false, "a/a", "a*"]
  [false, "a/b", "a*"]
  [false, "a/c", "a*"]
  [false, "a/x", "a*"]
  [false, "a/a/a", "a*"]
  [false, "a/a/b", "a*"]
  [false, "a/a/a/a", "a*"]
  [false, "a/a/a/a/a", "a*"]
  [false, "x/y", "a*"]
  [false, "z/z", "a*"]

  [false, "a", "*b"]
  [false, "aa", "*b"]
  [false, "aaa", "*b"]
  [false, "aaaa", "*b"]
  [true, "ab", "*b"]
  [true, "b", "*b"]
  [true, "bb", "*b"]
  [false, "c", "*b"]
  [false, "cc", "*b"]
  [false, "cac", "*b"]
  [false, "a/a", "*b"]
  [false, "a/b", "*b"]
  [false, "a/c", "*b"]
  [false, "a/x", "*b"]
  [false, "a/a/a", "*b"]
  [false, "a/a/b", "*b"]
  [false, "a/a/a/a", "*b"]
  [false, "a/a/a/a/a", "*b"]
  [false, "x/y", "*b"]
  [false, "z/z", "*b"]

## it('should match one or zero characters', () => {
  [true, "a", "*"]
  [true, "aa", "*"]
  [true, "aaa", "*"]
  [true, "aaaa", "*"]
  [true, "ab", "*"]
  [true, "b", "*"]
  [true, "bb", "*"]
  [true, "c", "*"]
  [true, "cc", "*"]
  [true, "cac", "*"]
  [false, "a/a", "*"]
  [false, "a/b", "*"]
  [false, "a/c", "*"]
  [false, "a/x", "*"]
  [false, "a/a/a", "*"]
  [false, "a/a/b", "*"]
  [false, "a/a/a/a", "*"]
  [false, "a/a/a/a/a", "*"]
  [false, "x/y", "*"]
  [false, "z/z", "*"]

  [true, "a", "*a*"]
  [true, "aa", "*a*"]
  [true, "aaa", "*a*"]
  [true, "aaaa", "*a*"]
  [true, "ab", "*a*"]
  [false, "b", "*a*"]
  [false, "bb", "*a*"]
  [false, "c", "*a*"]
  [false, "cc", "*a*"]
  [true, "cac", "*a*"]
  [false, "a/a", "*a*"]
  [false, "a/b", "*a*"]
  [false, "a/c", "*a*"]
  [false, "a/x", "*a*"]
  [false, "a/a/a", "*a*"]
  [false, "a/a/b", "*a*"]
  [false, "a/a/a/a", "*a*"]
  [false, "a/a/a/a/a", "*a*"]
  [false, "x/y", "*a*"]
  [false, "z/z", "*a*"]

  [false, "a", "*b*"]
  [false, "aa", "*b*"]
  [false, "aaa", "*b*"]
  [false, "aaaa", "*b*"]
  [true, "ab", "*b*"]
  [true, "b", "*b*"]
  [true, "bb", "*b*"]
  [false, "c", "*b*"]
  [false, "cc", "*b*"]
  [false, "cac", "*b*"]
  [false, "a/a", "*b*"]
  [false, "a/b", "*b*"]
  [false, "a/c", "*b*"]
  [false, "a/x", "*b*"]
  [false, "a/a/a", "*b*"]
  [false, "a/a/b", "*b*"]
  [false, "a/a/a/a", "*b*"]
  [false, "a/a/a/a/a", "*b*"]
  [false, "x/y", "*b*"]
  [false, "z/z", "*b*"]

  [false, "a", "*c*"]
  [false, "aa", "*c*"]
  [false, "aaa", "*c*"]
  [false, "aaaa", "*c*"]
  [false, "ab", "*c*"]
  [false, "b", "*c*"]
  [false, "bb", "*c*"]
  [true, "c", "*c*"]
  [true, "cc", "*c*"]
  [true, "cac", "*c*"]
  [false, "a/a", "*c*"]
  [false, "a/b", "*c*"]
  [false, "a/c", "*c*"]
  [false, "a/x", "*c*"]
  [false, "a/a/a", "*c*"]
  [false, "a/a/b", "*c*"]
  [false, "a/a/a/a", "*c*"]
  [false, "a/a/a/a/a", "*c*"]
  [false, "x/y", "*c*"]
  [false, "z/z", "*c*"]

## it('should respect trailing slashes on paterns', () => {
  [false, "a", "*/"]
  [true, "a/", "*/"]
  [false, "b", "*/"]
  [true, "b/", "*/"]
  [false, "a/a", "*/"]
  [false, "a/a/", "*/"]
  [false, "a/b", "*/"]
  [false, "a/b/", "*/"]
  [false, "a/c", "*/"]
  [false, "a/c/", "*/"]
  [false, "a/x", "*/"]
  [false, "a/x/", "*/"]
  [false, "a/a/a", "*/"]
  [false, "a/a/b", "*/"]
  [false, "a/a/b/", "*/"]
  [false, "a/a/a/", "*/"]
  [false, "a/a/a/a", "*/"]
  [false, "a/a/a/a/", "*/"]
  [false, "a/a/a/a/a", "*/"]
  [false, "a/a/a/a/a/", "*/"]
  [false, "x/y", "*/"]
  [false, "z/z", "*/"]
  [false, "x/y/", "*/"]
  [false, "z/z/", "*/"]
  [false, "a/b/c/.d/e/", "*/"]

  [false, "a", "*/*/"]
  [false, "a/", "*/*/"]
  [false, "b", "*/*/"]
  [false, "b/", "*/*/"]
  [false, "a/a", "*/*/"]
  [true, "a/a/", "*/*/"]
  [false, "a/b", "*/*/"]
  [true, "a/b/", "*/*/"]
  [false, "a/c", "*/*/"]
  [true, "a/c/", "*/*/"]
  [false, "a/x", "*/*/"]
  [true, "a/x/", "*/*/"]
  [false, "a/a/a", "*/*/"]
  [false, "a/a/b", "*/*/"]
  [false, "a/a/b/", "*/*/"]
  [false, "a/a/a/", "*/*/"]
  [false, "a/a/a/a", "*/*/"]
  [false, "a/a/a/a/", "*/*/"]
  [false, "a/a/a/a/a", "*/*/"]
  [false, "a/a/a/a/a/", "*/*/"]
  [false, "x/y", "*/*/"]
  [false, "z/z", "*/*/"]
  [true, "x/y/", "*/*/"]
  [true, "z/z/", "*/*/"]
  [false, "a/b/c/.d/e/", "*/*/"]

  [false, "a", "*/*/*/"]
  [false, "a/", "*/*/*/"]
  [false, "b", "*/*/*/"]
  [false, "b/", "*/*/*/"]
  [false, "a/a", "*/*/*/"]
  [false, "a/a/", "*/*/*/"]
  [false, "a/b", "*/*/*/"]
  [false, "a/b/", "*/*/*/"]
  [false, "a/c", "*/*/*/"]
  [false, "a/c/", "*/*/*/"]
  [false, "a/x", "*/*/*/"]
  [false, "a/x/", "*/*/*/"]
  [false, "a/a/a", "*/*/*/"]
  [false, "a/a/b", "*/*/*/"]
  [true, "a/a/b/", "*/*/*/"]
  [true, "a/a/a/", "*/*/*/"]
  [false, "a/a/a/a", "*/*/*/"]
  [false, "a/a/a/a/", "*/*/*/"]
  [false, "a/a/a/a/a", "*/*/*/"]
  [false, "a/a/a/a/a/", "*/*/*/"]
  [false, "x/y", "*/*/*/"]
  [false, "z/z", "*/*/*/"]
  [false, "x/y/", "*/*/*/"]
  [false, "z/z/", "*/*/*/"]
  [false, "a/b/c/.d/e/", "*/*/*/"]

  [false, "a", "*/*/*/*/"]
  [false, "a/", "*/*/*/*/"]
  [false, "b", "*/*/*/*/"]
  [false, "b/", "*/*/*/*/"]
  [false, "a/a", "*/*/*/*/"]
  [false, "a/a/", "*/*/*/*/"]
  [false, "a/b", "*/*/*/*/"]
  [false, "a/b/", "*/*/*/*/"]
  [false, "a/c", "*/*/*/*/"]
  [false, "a/c/", "*/*/*/*/"]
  [false, "a/x", "*/*/*/*/"]
  [false, "a/x/", "*/*/*/*/"]
  [false, "a/a/a", "*/*/*/*/"]
  [false, "a/a/b", "*/*/*/*/"]
  [false, "a/a/b/", "*/*/*/*/"]
  [false, "a/a/a/", "*/*/*/*/"]
  [false, "a/a/a/a", "*/*/*/*/"]
  [true, "a/a/a/a/", "*/*/*/*/"]
  [false, "a/a/a/a/a", "*/*/*/*/"]
  [false, "a/a/a/a/a/", "*/*/*/*/"]
  [false, "x/y", "*/*/*/*/"]
  [false, "z/z", "*/*/*/*/"]
  [false, "x/y/", "*/*/*/*/"]
  [false, "z/z/", "*/*/*/*/"]
  [false, "a/b/c/.d/e/", "*/*/*/*/"]

  [false, "a", "*/*/*/*/*/"]
  [false, "a/", "*/*/*/*/*/"]
  [false, "b", "*/*/*/*/*/"]
  [false, "b/", "*/*/*/*/*/"]
  [false, "a/a", "*/*/*/*/*/"]
  [false, "a/a/", "*/*/*/*/*/"]
  [false, "a/b", "*/*/*/*/*/"]
  [false, "a/b/", "*/*/*/*/*/"]
  [false, "a/c", "*/*/*/*/*/"]
  [false, "a/c/", "*/*/*/*/*/"]
  [false, "a/x", "*/*/*/*/*/"]
  [false, "a/x/", "*/*/*/*/*/"]
  [false, "a/a/a", "*/*/*/*/*/"]
  [false, "a/a/b", "*/*/*/*/*/"]
  [false, "a/a/b/", "*/*/*/*/*/"]
  [false, "a/a/a/", "*/*/*/*/*/"]
  [false, "a/a/a/a", "*/*/*/*/*/"]
  [false, "a/a/a/a/", "*/*/*/*/*/"]
  [false, "a/a/a/a/a", "*/*/*/*/*/"]
  [true, "a/a/a/a/a/", "*/*/*/*/*/"]
  [false, "x/y", "*/*/*/*/*/"]
  [false, "z/z", "*/*/*/*/*/"]
  [false, "x/y/", "*/*/*/*/*/"]
  [false, "z/z/", "*/*/*/*/*/"]
  [false, "a/b/c/.d/e/", "*/*/*/*/*/"]

  [false, "a", "a/*/"]
  [false, "a/", "a/*/"]
  [false, "b", "a/*/"]
  [false, "b/", "a/*/"]
  [false, "a/a", "a/*/"]
  [true, "a/a/", "a/*/"]
  [false, "a/b", "a/*/"]
  [true, "a/b/", "a/*/"]
  [false, "a/c", "a/*/"]
  [true, "a/c/", "a/*/"]
  [false, "a/x", "a/*/"]
  [true, "a/x/", "a/*/"]
  [false, "a/a/a", "a/*/"]
  [false, "a/a/b", "a/*/"]
  [false, "a/a/b/", "a/*/"]
  [false, "a/a/a/", "a/*/"]
  [false, "a/a/a/a", "a/*/"]
  [false, "a/a/a/a/", "a/*/"]
  [false, "a/a/a/a/a", "a/*/"]
  [false, "a/a/a/a/a/", "a/*/"]
  [false, "x/y", "a/*/"]
  [false, "z/z", "a/*/"]
  [false, "x/y/", "a/*/"]
  [false, "z/z/", "a/*/"]
  [false, "a/b/c/.d/e/", "a/*/"]

  [false, "a", "a/*/*/"]
  [false, "a/", "a/*/*/"]
  [false, "b", "a/*/*/"]
  [false, "b/", "a/*/*/"]
  [false, "a/a", "a/*/*/"]
  [false, "a/a/", "a/*/*/"]
  [false, "a/b", "a/*/*/"]
  [false, "a/b/", "a/*/*/"]
  [false, "a/c", "a/*/*/"]
  [false, "a/c/", "a/*/*/"]
  [false, "a/x", "a/*/*/"]
  [false, "a/x/", "a/*/*/"]
  [false, "a/a/a", "a/*/*/"]
  [false, "a/a/b", "a/*/*/"]
  [true, "a/a/b/", "a/*/*/"]
  [true, "a/a/a/", "a/*/*/"]
  [false, "a/a/a/a", "a/*/*/"]
  [false, "a/a/a/a/", "a/*/*/"]
  [false, "a/a/a/a/a", "a/*/*/"]
  [false, "a/a/a/a/a/", "a/*/*/"]
  [false, "x/y", "a/*/*/"]
  [false, "z/z", "a/*/*/"]
  [false, "x/y/", "a/*/*/"]
  [false, "z/z/", "a/*/*/"]
  [false, "a/b/c/.d/e/", "a/*/*/"]

  [false, "a", "a/*/*/*/"]
  [false, "a/", "a/*/*/*/"]
  [false, "b", "a/*/*/*/"]
  [false, "b/", "a/*/*/*/"]
  [false, "a/a", "a/*/*/*/"]
  [false, "a/a/", "a/*/*/*/"]
  [false, "a/b", "a/*/*/*/"]
  [false, "a/b/", "a/*/*/*/"]
  [false, "a/c", "a/*/*/*/"]
  [false, "a/c/", "a/*/*/*/"]
  [false, "a/x", "a/*/*/*/"]
  [false, "a/x/", "a/*/*/*/"]
  [false, "a/a/a", "a/*/*/*/"]
  [false, "a/a/b", "a/*/*/*/"]
  [false, "a/a/b/", "a/*/*/*/"]
  [false, "a/a/a/", "a/*/*/*/"]
  [false, "a/a/a/a", "a/*/*/*/"]
  [true, "a/a/a/a/", "a/*/*/*/"]
  [false, "a/a/a/a/a", "a/*/*/*/"]
  [false, "a/a/a/a/a/", "a/*/*/*/"]
  [false, "x/y", "a/*/*/*/"]
  [false, "z/z", "a/*/*/*/"]
  [false, "x/y/", "a/*/*/*/"]
  [false, "z/z/", "a/*/*/*/"]
  [false, "a/b/c/.d/e/", "a/*/*/*/"]

  [false, "a", "a/*/*/*/*/"]
  [false, "a/", "a/*/*/*/*/"]
  [false, "b", "a/*/*/*/*/"]
  [false, "b/", "a/*/*/*/*/"]
  [false, "a/a", "a/*/*/*/*/"]
  [false, "a/a/", "a/*/*/*/*/"]
  [false, "a/b", "a/*/*/*/*/"]
  [false, "a/b/", "a/*/*/*/*/"]
  [false, "a/c", "a/*/*/*/*/"]
  [false, "a/c/", "a/*/*/*/*/"]
  [false, "a/x", "a/*/*/*/*/"]
  [false, "a/x/", "a/*/*/*/*/"]
  [false, "a/a/a", "a/*/*/*/*/"]
  [false, "a/a/b", "a/*/*/*/*/"]
  [false, "a/a/b/", "a/*/*/*/*/"]
  [false, "a/a/a/", "a/*/*/*/*/"]
  [false, "a/a/a/a", "a/*/*/*/*/"]
  [false, "a/a/a/a/", "a/*/*/*/*/"]
  [false, "a/a/a/a/a", "a/*/*/*/*/"]
  [true, "a/a/a/a/a/", "a/*/*/*/*/"]
  [false, "x/y", "a/*/*/*/*/"]
  [false, "z/z", "a/*/*/*/*/"]
  [false, "x/y/", "a/*/*/*/*/"]
  [false, "z/z/", "a/*/*/*/*/"]
  [false, "a/b/c/.d/e/", "a/*/*/*/*/"]

  [false, "a", "a/*/a/"]
  [false, "a/", "a/*/a/"]
  [false, "b", "a/*/a/"]
  [false, "b/", "a/*/a/"]
  [false, "a/a", "a/*/a/"]
  [false, "a/a/", "a/*/a/"]
  [false, "a/b", "a/*/a/"]
  [false, "a/b/", "a/*/a/"]
  [false, "a/c", "a/*/a/"]
  [false, "a/c/", "a/*/a/"]
  [false, "a/x", "a/*/a/"]
  [false, "a/x/", "a/*/a/"]
  [false, "a/a/a", "a/*/a/"]
  [false, "a/a/b", "a/*/a/"]
  [false, "a/a/b/", "a/*/a/"]
  [true, "a/a/a/", "a/*/a/"]
  [false, "a/a/a/a", "a/*/a/"]
  [false, "a/a/a/a/", "a/*/a/"]
  [false, "a/a/a/a/a", "a/*/a/"]
  [false, "a/a/a/a/a/", "a/*/a/"]
  [false, "x/y", "a/*/a/"]
  [false, "z/z", "a/*/a/"]
  [false, "x/y/", "a/*/a/"]
  [false, "z/z/", "a/*/a/"]
  [false, "a/b/c/.d/e/", "a/*/a/"]

  [false, "a", "a/*/b/"]
  [false, "a/", "a/*/b/"]
  [false, "b", "a/*/b/"]
  [false, "b/", "a/*/b/"]
  [false, "a/a", "a/*/b/"]
  [false, "a/a/", "a/*/b/"]
  [false, "a/b", "a/*/b/"]
  [false, "a/b/", "a/*/b/"]
  [false, "a/c", "a/*/b/"]
  [false, "a/c/", "a/*/b/"]
  [false, "a/x", "a/*/b/"]
  [false, "a/x/", "a/*/b/"]
  [false, "a/a/a", "a/*/b/"]
  [false, "a/a/b", "a/*/b/"]
  [true, "a/a/b/", "a/*/b/"]
  [false, "a/a/a/", "a/*/b/"]
  [false, "a/a/a/a", "a/*/b/"]
  [false, "a/a/a/a/", "a/*/b/"]
  [false, "a/a/a/a/a", "a/*/b/"]
  [false, "a/a/a/a/a/", "a/*/b/"]
  [false, "x/y", "a/*/b/"]
  [false, "z/z", "a/*/b/"]
  [false, "x/y/", "a/*/b/"]
  [false, "z/z/", "a/*/b/"]
  [false, "a/b/c/.d/e/", "a/*/b/"]

## it('should match a literal star when escaped', () => {
  [false, ".md", "\\*"]
  [false, "a**a.md", "\\*"]
  [false, "**a.md", "\\*"]
  [false, "**/a.md", "\\*"]
  [false, "**.md", "\\*"]
  [false, ".md", "\\*"]
  [true, "*", "\\*"]
  [false, "**", "\\*"]
  [false, "*.md", "\\*"]

  [false, ".md", "\\*.md"]
  [false, "a**a.md", "\\*.md"]
  [false, "**a.md", "\\*.md"]
  [false, "**/a.md", "\\*.md"]
  [false, "**.md", "\\*.md"]
  [false, ".md", "\\*.md"]
  [false, "*", "\\*.md"]
  [false, "**", "\\*.md"]
  [true, "*.md", "\\*.md"]

  [false, ".md", "\\**.md"]
  [false, "a**a.md", "\\**.md"]
  [true, "**a.md", "\\**.md"]
  [false, "**/a.md", "\\**.md"]
  [true, "**.md", "\\**.md"]
  [false, ".md", "\\**.md"]
  [false, "*", "\\**.md"]
  [false, "**", "\\**.md"]
  [true, "*.md", "\\**.md"]

  [false, ".md", "a\\**.md"]
  [true, "a**a.md", "a\\**.md"]
  [false, "**a.md", "a\\**.md"]
  [false, "**/a.md", "a\\**.md"]
  [false, "**.md", "a\\**.md"]
  [false, ".md", "a\\**.md"]
  [false, "*", "a\\**.md"]
  [false, "**", "a\\**.md"]
  [false, "*.md", "a\\**.md"]

## it('should match file paths', () => {
  [false, "a/.b", "a/**/z/*.md"]
  [false, "a/b/c/j/e/z/c.txt", "a/**/j/**/z/*.md"]
  [false, "a/b/z/.a", "a/**/z/*.a"]
  [false, "a/b/z/.a", "a/*/z/*.a"]
  [false, "foo.txt", "*/*.txt"]
  [true, "a/.b", "a/.*"]
  [true, "a/b/c/d/e/j/n/p/o/z/c.md", "a/**/j/**/z/*.md"]
  [true, "a/b/c/d/e/z/c.md", "a/**/z/*.md"]
  [true, "a/b/c/xyz.md", "a/b/c/*.md"]
  [true, "a/b/z/.a", "a/*/z/.a"]
  [true, "a/bb.bb/aa/b.b/aa/c/xyz.md", "a/**/c/*.md"]
  [true, "a/bb.bb/aa/bb/aa/c/xyz.md", "a/**/c/*.md"]
  [true, "a/bb.bb/c/xyz.md", "a/*/c/*.md"]
  [true, "a/bb/c/xyz.md", "a/*/c/*.md"]
  [true, "a/bbbb/c/xyz.md", "a/*/c/*.md"]
  [true, "foo.txt", "**/foo.txt"]
  [true, "foo/bar.txt", "**/*.txt"]
  [true, "foo/bar/baz.txt", "**/*.txt"]

## it('should match paths with leading `./` when pattern has `./`', () => {
  // const format = str => str.replace(/^\.\//, "");
  // (3) [false, "./a/b/c/d/e/z/c.md", "./a/**/j/**/z/*.md", { format }]
  // (3) [false, "./a/b/c/j/e/z/c.txt", "./a/**/j/**/z/*.md", { format }]
  // (3) [true, "./a/b/c/d/e/j/n/p/o/z/c.md", "./a/**/j/**/z/*.md", { format }]
  // (3) [true, "./a/b/c/d/e/z/c.md", "./a/**/z/*.md", { format }]
  // (3) [true, "./a/b/c/j/e/z/c.md", "./a/**/j/**/z/*.md", { format }]
  // (3) [true, "./a/b/z/.a", "./a/**/z/.a", { format }]

## it('should match leading slashes', () => {
  [false, "ef", "/*"]
  [true, "/ef", "/*"]
  [true, "/foo/bar.txt", "/foo/*"]
  [true, "/foo/bar.txt", "/foo/**"]
  [true, "/foo/bar.txt", "/foo/**/**/*.txt"]
  [true, "/foo/bar.txt", "/foo/**/**/bar.txt"]
  [true, "/foo/bar.txt", "/foo/**/*.txt"]
  [true, "/foo/bar.txt", "/foo/**/bar.txt"]
  [false, "/foo/bar.txt", "/foo/*/bar.txt"]
  [false, "/foo/bar/baz.txt", "/foo/*"]
  [true, "/foo/bar/baz.txt", "/foo/**"]
  [true, "/foo/bar/baz.txt", "/foo/**"]
  [true, "/foo/bar/baz.txt", "/foo/**/*.txt"]
  [true, "/foo/bar/baz.txt", "/foo/**/*/*.txt"]
  [true, "/foo/bar/baz.txt", "/foo/**/*/baz.txt"]
  [false, "/foo/bar/baz.txt", "/foo/*.txt"]
  [true, "/foo/bar/baz.txt", "/foo/*/*.txt"]
  [false, "/foo/bar/baz.txt", "/foo/*/*/baz.txt"]
  [false, "/foo/bar/baz.txt", "/foo/bar**"]
  [true, "/foo/bar/baz/qux.txt", "**/*.txt"]
  [false, "/foo/bar/baz/qux.txt", "**/.txt"]
  [false, "/foo/bar/baz/qux.txt", "*/*.txt"]
  [false, "/foo/bar/baz/qux.txt", "/foo/**.txt"]
  [true, "/foo/bar/baz/qux.txt", "/foo/**/*.txt"]
  [false, "/foo/bar/baz/qux.txt", "/foo/*/*.txt"]
  [false, "/foo/bar/baz/qux.txt", "/foo/bar**/*.txt"]
  [false, "/.txt", "*.txt"]
  [false, "/.txt", "/*.txt"]
  [false, "/.txt", "*/*.txt"]
  [false, "/.txt", "**/*.txt"]
  [false, "/.txt", "*.txt", { "hidden": true }]
  [true, "/.txt", "/*.txt", { "hidden": true }]
  [true, "/.txt", "*/*.txt", { "hidden": true }]
  [true, "/.txt", "**/*.txt", { "hidden": true }]

## it('should match double slashes', () => {
  [false, "https://foo.com/bar/baz/app.min.js", "https://foo.com/*"]
  [false, "https://foo.com/bar/baz/app.min.js", "https://foo.com/*"]
  [true, "https://foo.com/bar/baz/app.min.js", "https://foo.com/**"]
  [false, "https://foo.com/bar/baz/app.min.js", "https://foo.com/**", { "globstar": false }]
  [true, "https://foo.com/bar/baz/app.min.js", "https://foo.com/**"]
  [true, "https://foo.com/bar/baz/app.min.js", "https://foo.com/**/app.min.js"]
  [true, "https://foo.com/bar/baz/app.min.js", "https://foo.com/*/*/app.min.js"]
  [true, "https://foo.com/bar/baz/app.min.js", "https://foo.com/*/*/app.min.js", { "globstar": false }]
  [false, "https://foo.com/bar/baz/app.min.js", "https://foo.com/*/app.min.js"]
  [false, "https://foo.com/bar/baz/app.min.js", "https://foo.com/*/app.min.js"]
  [true, "https://foo.com/bar/baz/app.min.js", "https://foo.com/**/app.min.js"]
  [false, "https://foo.com/bar/baz/app.min.js", "https://foo.com/**/app.min.js", { "globstar": false }]

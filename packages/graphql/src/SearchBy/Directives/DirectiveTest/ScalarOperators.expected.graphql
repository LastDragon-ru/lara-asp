"""
Use Input as Search Conditions for the current Builder.
"""
directive @searchBy
on
    | ARGUMENT_DEFINITION

"""
Extends the list of operators by the operators from the specified
`type` or from the config if `null`.
"""
directive @searchByExtendOperators(
    type: String
)
on
    | ENUM
    | SCALAR

directive @searchByOperatorAllOf
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorCondition
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorEqual
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorField
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorIn
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorIsNotNull
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorIsNull
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorLessThan
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorLessThanOrEqual
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

directive @searchByOperatorNotEqual
on
    | ENUM
    | INPUT_FIELD_DEFINITION
    | SCALAR

enum EnumA
@searchByOperatorIn
{
    A
}

enum SearchByTypeFlag {
    Yes

    yes
    @deprecated(
        reason: "Please use `Yes` instead."
    )
}

"""
Available conditions for `input A` (only one field allowed at a time).
"""
input SearchByConditionA {
    """
    Field condition.
    """
    a: SearchByScalarMixed
    @searchByOperatorCondition

    """
    Field condition.
    """
    b: SearchByScalarDateOrNull
    @searchByOperatorCondition

    """
    Field condition.
    """
    c: SearchByEnumEnumAOrNull
    @searchByOperatorCondition

    """
    Field condition.
    """
    d: SearchByScalarInt
    @searchByOperatorCondition
}

"""
Available operators for `enum EnumA` (only one operator allowed at a time).
"""
input SearchByEnumEnumAOrNull {
    """
    Within a set of values.
    """
    in: [EnumA!]
    @searchByOperatorIn

    """
    Is NOT NULL?
    """
    isNotNull: SearchByTypeFlag
    @searchByOperatorIsNotNull

    """
    Is NULL?
    """
    isNull: SearchByTypeFlag
    @searchByOperatorIsNull
}

"""
Available conditions for `input A` (only one field allowed at a time).
"""
input SearchByRootA {
    """
    All of the conditions must be true.
    """
    allOf: [SearchByRootA!]
    @searchByOperatorAllOf

    """
    Field.
    """
    field: SearchByConditionA
    @searchByOperatorField
}

"""
Available operators for `scalar Date` (only one operator allowed at a time).
"""
input SearchByScalarDateOrNull {
    """
    Equal (`=`).
    """
    equal: Date
    @searchByOperatorEqual

    """
    Is NOT NULL?
    """
    isNotNull: SearchByTypeFlag
    @searchByOperatorIsNotNull

    """
    Is NULL?
    """
    isNull: SearchByTypeFlag
    @searchByOperatorIsNull

    """
    Less than (`<`).
    """
    lessThan: Date
    @searchByOperatorLessThan

    """
    Less than or equal to (`<=`).
    """
    lessThanOrEqual: Date
    @searchByOperatorLessThanOrEqual

    """
    Not Equal (`!=`).
    """
    notEqual: Date
    @searchByOperatorNotEqual
}

"""
Available operators for `scalar Int` (only one operator allowed at a time).
"""
input SearchByScalarInt {
    """
    Equal (`=`).
    """
    equal: Int
    @searchByOperatorEqual
}

"""
Available operators for `scalar Mixed` (only one operator allowed at a time).
"""
input SearchByScalarMixed {
    """
    Equal (`=`).
    """
    equal: Mixed
    @searchByOperatorEqual
}

scalar Date
@scalar(
    class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date"
)
@searchByExtendOperators(
    type: "Boolean"
)
@searchByOperatorLessThan
@searchByOperatorLessThanOrEqual

"""
The `String` scalar type represents textual data, represented as UTF-8
character sequences. The String type is most often used by GraphQL to
represent free-form human-readable text.
"""
scalar Mixed
@scalar(
    class: "GraphQL\\Type\\Definition\\StringType"
)
@searchByOperatorEqual

"""
Internal scalar for internal purposes. It is only exists as a definition
thus must not be used as type/value.
"""
scalar SearchByExtra
@scalar(
    class: "LastDragon_ru\\LaraASP\\GraphQL\\Builder\\Scalars\\Internal"
)
@searchByOperatorField
@searchByOperatorAllOf

"""
Internal scalar for internal purposes. It is only exists as a definition
thus must not be used as type/value.
"""
scalar SearchByInt
@scalar(
    class: "LastDragon_ru\\LaraASP\\GraphQL\\Builder\\Scalars\\Internal"
)
@searchByOperatorEqual

type Query {
    debug(
        int: SearchByInt
        extra: SearchByExtra
    ): String!
    @mock

    test(
        where: SearchByRootA
        @searchBy
    ): ID!
    @all
}

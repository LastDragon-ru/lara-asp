type SchemaType
implements
    & SchemaInterfaceB
{
    a: Boolean!

    """
    Deprecated field
    """
    b: [String]!

    c(
        """
        aaa
        """
        a: String

        """
        bbb
        """
        b: [SchemaScalar!]!

        c: CodeInput
    ): CodeUnion

    d: CodeScalar
    e: CodeEnum

    f(
        a: [String!] = [
            "very very very long line of text"
            "very very very long line of text"
            "very very very long line of text"
        ]
    ): SchemaUnion
}

enum CodeEnum {
    A
    B
    C
}

enum SchemaEnum {
    A

    """
    Description
    """
    B
}

"""
Description
"""
input CodeInput {
    a: Boolean
}

"""
Description
"""
interface CodeInterface {
    a: Boolean!
}

interface SchemaInterfaceA {
    a: Boolean!
}

"""
Interface description.
"""
interface SchemaInterfaceB
implements
    & CodeInterface
    & SchemaInterfaceA
{
    a: Boolean!

    """
    Deprecated field
    """
    b: [String]!

    c(
        """
        aaa
        """
        a: String

        """
        bbb
        """
        b: [SchemaScalar!]!

        c: SchemaEnum
    ): CodeUnion

    d: CodeScalar
    e: CodeEnum
}

"""
The `String` scalar type represents textual data, represented as UTF-8
character sequences. The String type is most often used by GraphQL to
represent free-form human-readable text.
"""
scalar CodeScalar

"""
The `String` scalar type represents textual data, represented as UTF-8
character sequences. The String type is most often used by GraphQL to
represent free-form human-readable text.
"""
scalar SchemaScalar

"""
Description
"""
type CodeType {
    a: Boolean
}

type SchemaType
implements
    & SchemaInterfaceB
{
    a: Boolean!

    """
    Deprecated field
    """
    b: [String]!

    c(
        """
        aaa
        """
        a: String

        """
        bbb
        """
        b: [SchemaScalar!]!

        c: CodeInput
    ): CodeUnion

    d: CodeScalar
    e: CodeEnum

    f(
        a: [String!] = [
            "very very very long line of text"
            "very very very long line of text"
            "very very very long line of text"
        ]
    ): SchemaUnion
}

union CodeUnion =
    | CodeType

union SchemaUnion =
    | CodeType
    | SchemaType

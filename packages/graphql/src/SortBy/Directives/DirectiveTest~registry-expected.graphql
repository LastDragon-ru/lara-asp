"""
Sort direction.
"""
enum SortByDirection {
    asc
    desc
}

"""
Sort clause for input A (only one property allowed at a time).
"""
input SortByClauseA {
    """
    Property clause.
    """
    flag: SortByDirection

    """
    Property clause.
    """
    name: SortByDirection
}

"""
Sort clause for input B (only one property allowed at a time).
"""
input SortByClauseB {
    """
    Property clause.
    """
    child: SortByClauseA

    """
    Property clause.
    """
    name: SortByDirection
}

"""
Sort clause for type C (only one property allowed at a time).
"""
input SortByClauseC {
    """
    Property clause.
    """
    flag: SortByDirection

    """
    Property clause.
    """
    name: SortByDirection
}

"""
Sort clause for type D (only one property allowed at a time).
"""
input SortByClauseD {
    """
    Property clause.
    """
    child: SortByClauseC
}

type C {
    flag: Boolean!
    list: [Boolean!]!
    name: String
}

type D {
    child: C!
}

type Query {
    a(
        order: [SortByClauseA!]
        @sortBy
    ): ID!
    @all

    b(
        order: [SortByClauseB!]
        @sortBy
    ): ID!
    @all

    c(
        order: [SortByClauseD!]
        @sortBy
    ): D!
    @all
}

"""
Convert Input into Sort Clause.
"""
directive @sortBy
on
    | ARGUMENT_DEFINITION

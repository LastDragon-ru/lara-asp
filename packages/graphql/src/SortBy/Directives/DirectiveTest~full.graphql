type Query implements Eloquent & Scout {
    eloquent(order: Properties @sortBy): ID! @all

    query(order: Properties @sortBy): ID! @all(
        builder: "\\LastDragon_ru\\LaraASP\\GraphQL\\SortBy\\Directives\\DirectiveTest__QueryBuilderResolver"
    )

    scout(search: String @search, order: Properties @sortBy): ID! @all

    placeholder(order: _ @sortBy): Object! @all
}

interface Eloquent {
    eloquent(order: Properties): ID!
}

interface Scout {
    scout(search: String, order: Properties): ID!
}

input Properties {
    idScalar: ID
    idScalarNotNull: ID!
    nested: Nested
    nestedNotNull: Nested!
    enum: Value
    enumNotNull: Value!
    ignored: ID! @sortByIgnored
    resolver: ID! @field(
        resolver: "\\LastDragon_ru\\LaraASP\\GraphQL\\SortBy\\Directives\\DirectiveTest__QueryBuilderResolver"
    )
}

input Nested {
    value: String
    nested: Nested
}

enum Value {
    one
    two
}

type Object {
    idScalar: ID
    idScalarNotNull: ID!
    nested: ObjectNested
    nestedNotNull: ObjectNested!
    enum: Value
    enumNotNull: Value!
    ignored: ID! @sortByIgnored
    resolver: ID! @field(
        resolver: "\\LastDragon_ru\\LaraASP\\GraphQL\\SortBy\\Directives\\DirectiveTest__QueryBuilderResolver"
    )
}

type ObjectNested {
    value: String
    nested: ObjectNested
}

input Nested {
  value: String
  nested: Nested
}

input Properties {
  idScalar: ID
  idScalarNotNull: ID!
  nested: Nested
  nestedNotNull: Nested!
  enum: Value
  enumNotNull: Value!
  unsortable: ID!
}

type Query {
  test(order: [SortByClauseProperties!]): ID!
}

"""Sort clause for input Nested (only one property allowed at a time)."""
input SortByClauseNested {
  """Property clause."""
  value: SortByDirection

  """Property clause."""
  nested: SortByClauseNested
}

"""
Sort clause for input Properties (only one property allowed at a time).
"""
input SortByClauseProperties {
  """Property clause."""
  idScalar: SortByDirection

  """Property clause."""
  idScalarNotNull: SortByDirection

  """Property clause."""
  nested: SortByClauseNested

  """Property clause."""
  nestedNotNull: SortByClauseNested

  """Property clause."""
  enum: SortByDirection

  """Property clause."""
  enumNotNull: SortByDirection
}

"""Sort direction."""
enum SortByDirection {
  asc
  desc
}

enum Value {
  one
  two
}

type Query implements InterfaceA & InterfaceB {
    fieldWithoutArguments: [Car] @stream

    fieldWithArguments(argument: String): [Car] @stream

    fieldWithDirectives(
        a: _ @searchBy,
        b: _ @sortBy
        c: _ = 123
        @streamLimit(
            default: 15
            max: 10
        )
        d: _ @streamCursor
    ): [Car] @stream

    fieldWithDirectivesAndDefaults(
        a: _ @searchBy,
        b: _ @sortBy
        c: _ = 123
        @streamLimit(
            default: 123
        )
        d: _ @streamCursor
    ): [Car]
    @stream(
        limit: 15
    )

    fieldNotSearchable: [Car] @stream(searchable: false)

    fieldNotSortable: [Car] @stream(sortable: false)

    fieldWithDeprecations(
        a: _ @deprecated @searchBy,
        b: _ @deprecated @sortBy
        c: _ = 123
        @deprecated
        @streamLimit(
            default: 123
            max: 123
        )
        d: _ @deprecated @streamCursor
    ): [Car]
    @stream(
        limit: 15
    )

    fieldWithSearch(search: String! @search): [Car] @stream
}

type Car {
    id: ID!
}

interface InterfaceA {
    fieldWithArguments(argument: String): [Car]
}

interface InterfaceB implements InterfaceC {
    fieldNotSearchable: [Car]
}

interface InterfaceC {
    fieldWithDirectives(
        a: TypeDoesntMatter,
        b: TypeDoesntMatter,
        c: TypeDoesntMatter,
        d: TypeDoesntMatter,
    ): [Car]
}
